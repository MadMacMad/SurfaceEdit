#pragma kernel CSMain


float2 TextureSize;

int2 RenderOrigin;
int2 RenderSize;

RWTexture2D<float4> BottomTexture;
Texture2D<float4> TopTexture;
Texture2D<float4> Mask;
 
SamplerState LinearMirrorSampler;

[numthreads(32, 32, 1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	if (id.x > RenderSize.x || id.y > RenderSize.y)
		return;

	int2 newID = int2(id.x + RenderOrigin.x, id.y + RenderOrigin.y);

	float2 uv = float2(newID / TextureSize);

	float maskValue = Mask.SampleLevel(LinearMirrorSampler, uv, 0).x;
		
	float4 bottomTextureValue = BottomTexture.Load(newID);
	float4 topTextureValue = TopTexture.SampleLevel(LinearMirrorSampler, uv, 0);

	BottomTexture[newID] = lerp(bottomTextureValue, topTextureValue, maskValue);
}

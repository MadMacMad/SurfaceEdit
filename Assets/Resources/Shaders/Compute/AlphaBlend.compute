#pragma kernel CSMain


float2 MaxTextureSize;

RWTexture2D<float4> BottomTexture;
Texture2D<float4> TopTexture;
Texture2D<float4> Mask;

SamplerState LinearMirrorSampler;

[numthreads(32, 32, 1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	if (id.x > MaxTextureSize.x || id.y > MaxTextureSize.y)
		return;

	float2 uv = float2(id.xy / MaxTextureSize);

	float maskValue = Mask.SampleLevel(LinearMirrorSampler, uv, 0).x;

	float4 bottomTextureValue = BottomTexture.Load(id);
	float4 topTextureValue = TopTexture.SampleLevel(LinearMirrorSampler, uv, 0);

	BottomTexture[id.xy] = lerp(bottomTextureValue, topTextureValue, maskValue);
}

#pragma kernel CSMain

RWTexture2D<float4> Result;

Texture2D<float4> BrushTexture;

float2 TextureSize;

float2 BrushSize;
int2 BrushOrigin;

SamplerState LinearClampSampler;

[numthreads (8, 8, 1)]
void CSMain (uint3 pos : SV_DispatchThreadID)
{
	if (pos.x > BrushSize.x)
		return;
	if (pos.y > BrushSize.y)
		return;

	float4 brushValue = BrushTexture.SampleLevel(LinearClampSampler, pos.xy / BrushSize, 0);
	float time = brushValue.a;

	int2 posCorrected = pos.xy + BrushOrigin;

	if (posCorrected.x < 0)
		posCorrected.x += TextureSize.x;
	else if (posCorrected.x > TextureSize.x)
		posCorrected.x -= TextureSize.x;

	if (posCorrected.y < 0)
		posCorrected.y += TextureSize.y;
	else if (posCorrected.y > TextureSize.y)
		posCorrected.y -= TextureSize.y;

	Result[posCorrected] = Result[posCorrected] * (1 - time) + brushValue * time;
}
